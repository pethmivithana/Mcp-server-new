"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload-cv";
exports.ids = ["pages/api/upload-cv"];
exports.modules = {

/***/ "(api-node)/./cv-praser.js":
/*!**********************!*\
  !*** ./cv-praser.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   answerQuestion: () => (/* binding */ answerQuestion),\n/* harmony export */   loadCVJson: () => (/* binding */ loadCVJson),\n/* harmony export */   parseCVToJSON: () => (/* binding */ parseCVToJSON),\n/* harmony export */   saveCVJson: () => (/* binding */ saveCVJson)\n/* harmony export */ });\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var url__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! url */ \"url\");\n\n\n\nconst __filename = (0,url__WEBPACK_IMPORTED_MODULE_2__.fileURLToPath)(\"file:///C:/Users/user/Desktop/MCP%20Server/cv-praser.js\");\nconst __dirname = path__WEBPACK_IMPORTED_MODULE_1__.dirname(__filename);\nconst DATA_DIR = path__WEBPACK_IMPORTED_MODULE_1__.join(__dirname, 'data');\nconst CV_JSON = path__WEBPACK_IMPORTED_MODULE_1__.join(DATA_DIR, 'cv.json');\n/**\n * CV parser: extracts sections, employment, education, skills, projects, certifications.\n */ function parseCVToJSON(rawText) {\n    const text = (rawText || '').replace(/\\r/g, '').trim();\n    const lines = text.split(/\\n+/).map((l)=>l.trim()).filter(Boolean);\n    // Segment sections by common headings\n    const sections = {};\n    let current = 'summary';\n    for (const line of lines){\n        const h = line.toLowerCase();\n        if (/^(experience|work experience|employment)$/.test(h)) current = 'experience';\n        else if (/^(education)$/.test(h)) current = 'education';\n        else if (/^(skills|technical skills)$/.test(h)) current = 'skills';\n        else if (/^(projects)$/.test(h)) current = 'projects';\n        else if (/^(certifications)$/.test(h)) current = 'certifications';\n        sections[current] = sections[current] || [];\n        sections[current].push(line);\n    }\n    // Employment extraction\n    const employment = [];\n    const exp = sections.experience || [];\n    for (const line of exp){\n        const m1 = line.match(/^(.*?)[\\sâ€“-]+(.*?)[\\s]*\\(([^)]*)\\)$/); // Company - Role (Dates)\n        const m2 = line.match(/^(.*?)\\s+at\\s+(.*?)\\s*(\\(([^)]*)\\))?$/i); // Role at Company\n        if (m1) {\n            const company = m1[1].trim();\n            const role = m1[2].trim();\n            const dates = m1[3].trim();\n            employment.push({\n                company,\n                role,\n                dates,\n                source: line\n            });\n        } else if (m2) {\n            const role = m2[1].trim();\n            const company = m2[2].trim();\n            const dates = (m2[4] || '').trim();\n            employment.push({\n                company,\n                role,\n                dates,\n                source: line\n            });\n        }\n    }\n    const lastRole = employment[employment.length - 1] || null;\n    return {\n        rawText: text,\n        sections,\n        employment,\n        lastRole\n    };\n}\nasync function saveCVJson(cvObj) {\n    await fs_promises__WEBPACK_IMPORTED_MODULE_0__.mkdir(DATA_DIR, {\n        recursive: true\n    });\n    await fs_promises__WEBPACK_IMPORTED_MODULE_0__.writeFile(CV_JSON, JSON.stringify(cvObj, null, 2), 'utf-8');\n}\nasync function loadCVJson() {\n    try {\n        const raw = await fs_promises__WEBPACK_IMPORTED_MODULE_0__.readFile(CV_JSON, 'utf-8');\n        return JSON.parse(raw);\n    } catch  {\n        return null;\n    }\n}\n/**\n * Q&A over the parsed CV: searches sections and sentences.\n */ function answerQuestion(question, cv) {\n    if (!cv) return \"I don't have your CV yet. Please upload it first.\";\n    const q = (question || '').toLowerCase().trim();\n    // --- Special case: last role ---\n    if (/last position|most recent role|last role|previous role|latest role/.test(q)) {\n        const lr = cv.lastRole;\n        if (lr) {\n            const parts = [\n                `Your last role was ${lr.role}`,\n                lr.company ? `at ${lr.company}` : '',\n                lr.dates ? `(${lr.dates})` : ''\n            ].filter(Boolean).join(' ');\n            return parts + '.';\n        }\n    }\n    // --- Section-aware search ---\n    const sectionKeywords = {\n        education: [\n            'education',\n            'degree',\n            'university',\n            'school',\n            'college'\n        ],\n        skills: [\n            'skills',\n            'technologies',\n            'stack',\n            'languages'\n        ],\n        projects: [\n            'project',\n            'application',\n            'app',\n            'portfolio'\n        ],\n        certifications: [\n            'certification',\n            'certificate',\n            'aws',\n            'google',\n            'microsoft'\n        ],\n        experience: [\n            'experience',\n            'work',\n            'role',\n            'position',\n            'company',\n            'employer'\n        ]\n    };\n    for (const [section, keywords] of Object.entries(sectionKeywords)){\n        if (keywords.some((k)=>q.includes(k))) {\n            const lines = cv.sections[section] || [];\n            if (lines.length) return lines.join('. ');\n        }\n    }\n    // --- Keyword search in all sentences ---\n    const sentences = cv.rawText.split(/(?<=\\.)\\s+/);\n    const keywords = q.split(/\\W+/).filter(Boolean);\n    let bestMatch = {\n        score: 0,\n        sentence: ''\n    };\n    for (const sentence of sentences){\n        let score = 0;\n        const sLower = sentence.toLowerCase();\n        for (const kw of keywords){\n            if (sLower.includes(kw)) score++;\n        }\n        if (score > bestMatch.score) bestMatch = {\n            score,\n            sentence\n        };\n    }\n    if (bestMatch.score > 0) return bestMatch.sentence;\n    return \"I couldn't find an answer in your CV. Try rephrasing your question.\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./cv-praser.js\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-cv&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload-cv.js&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-cv&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload-cv.js&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\upload-cv.js */ \"(api-node)/./pages/api/upload-cv.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload-cv\",\n        pathname: \"/api/upload-cv\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_upload_cv_js__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/upload-cv\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/upload-cv\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-cv&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload-cv.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/upload-cv.js":
/*!********************************!*\
  !*** ./pages/api/upload-cv.js ***!
  \********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var cloudinary__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cloudinary */ \"cloudinary\");\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pdf-parse */ \"pdf-parse\");\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! mammoth */ \"mammoth\");\n/* harmony import */ var _cv_praser_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../cv-praser.js */ \"(api-node)/./cv-praser.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_0__]);\nformidable__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n// pages/api/upload-cv.js\n\n\n\n\n\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\n// Cloudinary setup\ncloudinary__WEBPACK_IMPORTED_MODULE_1__.v2.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET\n});\nasync function handler(req, res) {\n    if (req.method !== 'POST') return res.status(405).json({\n        error: 'Method not allowed'\n    });\n    const form = (0,formidable__WEBPACK_IMPORTED_MODULE_0__[\"default\"])({\n        multiples: false\n    });\n    form.parse(req, async (err, fields, files)=>{\n        if (err) {\n            console.error('Formidable parse error:', err);\n            return res.status(500).json({\n                error: 'Error parsing upload'\n            });\n        }\n        let file = files.file;\n        if (!file) return res.status(400).json({\n            error: 'No file uploaded'\n        });\n        if (Array.isArray(file)) file = file[0];\n        try {\n            // Upload to Cloudinary\n            const uploadResult = await cloudinary__WEBPACK_IMPORTED_MODULE_1__.v2.uploader.upload(file.filepath, {\n                resource_type: 'raw',\n                folder: 'cv_uploads'\n            });\n            const fileUrl = uploadResult.secure_url;\n            const ext = file.originalFilename ? file.originalFilename.split('.').pop().toLowerCase() : '';\n            // Get file buffer from Cloudinary URL\n            const response = await fetch(fileUrl);\n            const buffer = Buffer.from(await response.arrayBuffer());\n            // Parse text depending on type\n            let rawText = '';\n            if (ext === 'pdf') {\n                const data = await pdf_parse__WEBPACK_IMPORTED_MODULE_2__(buffer);\n                rawText = data.text;\n            } else if (ext === 'docx') {\n                const data = await mammoth__WEBPACK_IMPORTED_MODULE_3__.extractRawText({\n                    buffer\n                });\n                rawText = data.value;\n            } else if (ext === 'txt') {\n                rawText = buffer.toString('utf-8');\n            } else {\n                return res.status(400).json({\n                    error: 'Unsupported file type: ' + ext\n                });\n            }\n            // Convert to JSON & save\n            const cvJson = (0,_cv_praser_js__WEBPACK_IMPORTED_MODULE_4__.parseCVToJSON)(rawText);\n            await (0,_cv_praser_js__WEBPACK_IMPORTED_MODULE_4__.saveCVJson)(cvJson);\n            return res.status(200).json({\n                success: true,\n                fileUrl,\n                parsed: cvJson\n            });\n        } catch (e) {\n            console.error('CV parse/save error:', e);\n            return res.status(500).json({\n                error: 'Failed to process CV'\n            });\n        }\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T0FBTztZQUF1QjtRQUM5RDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcdXNlclxcRGVza3RvcFxcTUNQIFNlcnZlclxccGFnZXNcXGFwaVxcdXBsb2FkLWN2LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHBhZ2VzL2FwaS91cGxvYWQtY3YuanNcbmltcG9ydCBmb3JtaWRhYmxlIGZyb20gJ2Zvcm1pZGFibGUnO1xuaW1wb3J0IHsgdjIgYXMgY2xvdWRpbmFyeSB9IGZyb20gJ2Nsb3VkaW5hcnknO1xuaW1wb3J0IHBkZlBhcnNlIGZyb20gJ3BkZi1wYXJzZSc7XG5pbXBvcnQgbWFtbW90aCBmcm9tICdtYW1tb3RoJztcbmltcG9ydCB7IHBhcnNlQ1ZUb0pTT04sIHNhdmVDVkpzb24gfSBmcm9tICcuLi8uLi9jdi1wcmFzZXIuanMnO1xuXG5leHBvcnQgY29uc3QgY29uZmlnID0geyBhcGk6IHsgYm9keVBhcnNlcjogZmFsc2UgfSB9O1xuXG4vLyBDbG91ZGluYXJ5IHNldHVwXG5jbG91ZGluYXJ5LmNvbmZpZyh7XG4gIGNsb3VkX25hbWU6IHByb2Nlc3MuZW52LkNMT1VESU5BUllfQ0xPVURfTkFNRSxcbiAgYXBpX2tleTogcHJvY2Vzcy5lbnYuQ0xPVURJTkFSWV9BUElfS0VZLFxuICBhcGlfc2VjcmV0OiBwcm9jZXNzLmVudi5DTE9VRElOQVJZX0FQSV9TRUNSRVQsXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKVxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7IGVycm9yOiAnTWV0aG9kIG5vdCBhbGxvd2VkJyB9KTtcblxuICBjb25zdCBmb3JtID0gZm9ybWlkYWJsZSh7IG11bHRpcGxlczogZmFsc2UgfSk7XG5cbiAgZm9ybS5wYXJzZShyZXEsIGFzeW5jIChlcnIsIGZpZWxkcywgZmlsZXMpID0+IHtcbiAgICBpZiAoZXJyKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGb3JtaWRhYmxlIHBhcnNlIGVycm9yOicsIGVycik7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0Vycm9yIHBhcnNpbmcgdXBsb2FkJyB9KTtcbiAgICB9XG5cbiAgICBsZXQgZmlsZSA9IGZpbGVzLmZpbGU7XG4gICAgaWYgKCFmaWxlKSByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ05vIGZpbGUgdXBsb2FkZWQnIH0pO1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpbGUpKSBmaWxlID0gZmlsZVswXTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBVcGxvYWQgdG8gQ2xvdWRpbmFyeVxuICAgICAgY29uc3QgdXBsb2FkUmVzdWx0ID0gYXdhaXQgY2xvdWRpbmFyeS51cGxvYWRlci51cGxvYWQoZmlsZS5maWxlcGF0aCwge1xuICAgICAgICByZXNvdXJjZV90eXBlOiAncmF3JywgLy8gaW1wb3J0YW50IGZvciBQREZzL0RPQ1hcbiAgICAgICAgZm9sZGVyOiAnY3ZfdXBsb2FkcycsXG4gICAgICB9KTtcblxuICAgICAgY29uc3QgZmlsZVVybCA9IHVwbG9hZFJlc3VsdC5zZWN1cmVfdXJsO1xuICAgICAgY29uc3QgZXh0ID0gZmlsZS5vcmlnaW5hbEZpbGVuYW1lXG4gICAgICAgID8gZmlsZS5vcmlnaW5hbEZpbGVuYW1lLnNwbGl0KCcuJykucG9wKCkudG9Mb3dlckNhc2UoKVxuICAgICAgICA6ICcnO1xuXG4gICAgICAvLyBHZXQgZmlsZSBidWZmZXIgZnJvbSBDbG91ZGluYXJ5IFVSTFxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChmaWxlVXJsKTtcbiAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGF3YWl0IHJlc3BvbnNlLmFycmF5QnVmZmVyKCkpO1xuXG4gICAgICAvLyBQYXJzZSB0ZXh0IGRlcGVuZGluZyBvbiB0eXBlXG4gICAgICBsZXQgcmF3VGV4dCA9ICcnO1xuICAgICAgaWYgKGV4dCA9PT0gJ3BkZicpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHBkZlBhcnNlKGJ1ZmZlcik7XG4gICAgICAgIHJhd1RleHQgPSBkYXRhLnRleHQ7XG4gICAgICB9IGVsc2UgaWYgKGV4dCA9PT0gJ2RvY3gnKSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBtYW1tb3RoLmV4dHJhY3RSYXdUZXh0KHsgYnVmZmVyIH0pO1xuICAgICAgICByYXdUZXh0ID0gZGF0YS52YWx1ZTtcbiAgICAgIH0gZWxzZSBpZiAoZXh0ID09PSAndHh0Jykge1xuICAgICAgICByYXdUZXh0ID0gYnVmZmVyLnRvU3RyaW5nKCd1dGYtOCcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgZXJyb3I6ICdVbnN1cHBvcnRlZCBmaWxlIHR5cGU6ICcgKyBleHQgfSk7XG4gICAgICB9XG5cbiAgICAgIC8vIENvbnZlcnQgdG8gSlNPTiAmIHNhdmVcbiAgICAgIGNvbnN0IGN2SnNvbiA9IHBhcnNlQ1ZUb0pTT04ocmF3VGV4dCk7XG4gICAgICBhd2FpdCBzYXZlQ1ZKc29uKGN2SnNvbik7XG5cbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUsIGZpbGVVcmwsIHBhcnNlZDogY3ZKc29uIH0pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0NWIHBhcnNlL3NhdmUgZXJyb3I6JywgZSk7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0ZhaWxlZCB0byBwcm9jZXNzIENWJyB9KTtcbiAgICB9XG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbImZvcm1pZGFibGUiLCJ2MiIsImNsb3VkaW5hcnkiLCJwZGZQYXJzZSIsIm1hbW1vdGgiLCJwYXJzZUNWVG9KU09OIiwic2F2ZUNWSnNvbiIsImNvbmZpZyIsImFwaSIsImJvZHlQYXJzZXIiLCJjbG91ZF9uYW1lIiwicHJvY2VzcyIsImVudiIsIkNMT1VESU5BUllfQ0xPVURfTkFNRSIsImFwaV9rZXkiLCJDTE9VRElOQVJZX0FQSV9LRVkiLCJhcGlfc2VjcmV0IiwiQ0xPVURJTkFSWV9BUElfU0VDUkVUIiwiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsInN0YXR1cyIsImpzb24iLCJlcnJvciIsImZvcm0iLCJtdWx0aXBsZXMiLCJwYXJzZSIsImVyciIsImZpZWxkcyIsImZpbGVzIiwiY29uc29sZSIsImZpbGUiLCJBcnJheSIsImlzQXJyYXkiLCJ1cGxvYWRSZXN1bHQiLCJ1cGxvYWRlciIsInVwbG9hZCIsImZpbGVwYXRoIiwicmVzb3VyY2VfdHlwZSIsImZvbGRlciIsImZpbGVVcmwiLCJzZWN1cmVfdXJsIiwiZXh0Iiwib3JpZ2luYWxGaWxlbmFtZSIsInNwbGl0IiwicG9wIiwidG9Mb3dlckNhc2UiLCJyZXNwb25zZSIsImZldGNoIiwiYnVmZmVyIiwiQnVmZmVyIiwiZnJvbSIsImFycmF5QnVmZmVyIiwicmF3VGV4dCIsImRhdGEiLCJ0ZXh0IiwiZXh0cmFjdFJhd1RleHQiLCJ2YWx1ZSIsInRvU3RyaW5nIiwiY3ZKc29uIiwic3VjY2VzcyIsInBhcnNlZCIsImUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/upload-cv.js\n");

/***/ }),

/***/ "cloudinary":
/*!*****************************!*\
  !*** external "cloudinary" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("cloudinary");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "mammoth":
/*!**************************!*\
  !*** external "mammoth" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mammoth");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "pdf-parse":
/*!****************************!*\
  !*** external "pdf-parse" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("pdf-parse");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-cv&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload-cv.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();